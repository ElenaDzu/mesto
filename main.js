(()=>{"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=function(){function r(t,o,i,a,u,s){var l=this,c=arguments.length>6&&void 0!==arguments[6]&&arguments[6];e(this,r),n(this,"_setEventListeners",(function(){l._cardLikebutton.addEventListener("click",l._handleLikeElement),l._cardLikebutton.addEventListener("click",l._handleCardLike.bind(l)),l._cardRemovebutton.addEventListener("click",l._handleRemoveElement),l._elementImage.addEventListener("click",l._handleCardClick)})),n(this,"_handleLikeElement",(function(){l._cardLikebutton.classList.toggle("element__icon_active")})),n(this,"_handleRemoveElement",(function(){l._handleCardRemove()})),this._title=t.name,this._image=t.link,this._selector=o,this._handleCardClick=i,this._handleCardRemove=a,this._handleCardLike=u,this._ownerId=t.owner._id,this._myCard=s,this.id=t._id,this._likes=t.likes,this._mylike=c}var o,i;return o=r,(i=[{key:"haveMyLike",value:function(){return this._mylike}},{key:"setLike",value:function(e){this._cardLikebutton.classList.add("element__icon_active"),this._likes=e,this._likesElement.innerText=this._likes.length,this._mylike=!0}},{key:"unsetLike",value:function(){this._cardLikebutton.classList.remove("element__icon_active"),this._likesElement.innerText=parseInt(this._likesElement.innerText)-1,this._mylike=!1}},{key:"remove",value:function(){this._itemElement.remove()}},{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(this._selector),this._itemElement=this._element.querySelector(".element"),this._elementImage=this._element.querySelector(".element__image"),this._elementImage.src=this._image,this._elementImage.alt=this._title,this._element.querySelector(".element__title").textContent=this._title,this._cardRemovebutton=this._element.querySelector(".element__trash"),this._cardLikebutton=this._element.querySelector(".element__icon"),this._likesElement=this._element.querySelector(".element__counter"),this._mylike&&this._cardLikebutton.classList.add("element__icon_active"),this._likesElement.innerText=this._likes.length,this._setEventListeners(),this._myCard&&this._cardRemovebutton.classList.add("element__trash_visible"),this._element}}])&&t(o.prototype,i),Object.defineProperty(o,"prototype",{writable:!1}),r}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r,o,i=this,a=t.items,u=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(e){i._selector.prepend(e)},(r="addItem")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._items=a,this._renderer=u,this._selector=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"close",(function(){n._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",n._handleEscClose)})),u(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close("popup_opened")})),this._popup=document.querySelector(t),this._popupCloseButton=this._popup.querySelector(".popup__close-btn"),this._popupCloseOverlay=this._popup}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupCloseButton.addEventListener("click",this.close),this._popupCloseOverlay.addEventListener("mousedown",(function(t){t.target.classList.contains("popup")&&e.close(e._popup)}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}function h(e,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageBig=t._popup.querySelector(".popup__image-big"),t._imageName=t._popup.querySelector(".popup__image-name"),t}return t=a,(n=[{key:"open",value:function(e){this._imageBig.src=e.target.src,this._imageBig.alt=e.target.src,this._imageName.textContent=e.target.alt,f(y(a.prototype),"open",this).call(this)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function S(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector("form"),n._handlerSubmitEvent=t,n.setEventListeners(),n}return t=a,(n=[{key:"setSubmitFunction",value:function(e){this._handlerSubmitEvent=e}},{key:"setEventListeners",value:function(){b(E(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._onSubmit.bind(this))}},{key:"_onSubmit",value:function(e){e.preventDefault(),this._handlerSubmitEvent.call(e.target),this.close()}},{key:"close",value:function(){b(E(a.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formInput=t.formInput,this._buttonElement=t.buttonElement,this._saveBtnInactive=t.saveBtnInactive,this._textTypeError=t.textTypeError,this._formElement=n,this._inputList=null,this._elementSubmit=null}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._textTypeError),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._textTypeError),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):(this._showInputError(e,e.validationMessage),console.log(e.validationMessage))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonStateReopen",value:function(){this._elementSubmit.classList.add(this._saveBtnInactive),this._elementSubmit.setAttribute("disabled","disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.toggleButtonStateReopen():(this._elementSubmit.classList.remove(this._saveBtnInactive),this._elementSubmit.removeAttribute("disabled"))}},{key:"_getInputElements",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_setEventListeners",value:function(){this._inputList=Array.from(this._formElement.querySelectorAll(this._formInput)),this._elementSubmit=this._formElement.querySelector(this._buttonElement),this._toggleButtonState(),this._getInputElements()}},{key:"_addSubmitListener",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._addSubmitListener(),this._setEventListeners()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function T(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._popup.querySelector("form"),n._handlerSubmitEvent=t,n._submitButton=n._form.querySelector(".popup__save-btn"),n}return t=a,n=[{key:"setEventListeners",value:function(){I(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._onSubmit.bind(this))}},{key:"_onSubmit",value:function(e){e.preventDefault(),this._handlerSubmitEvent.call(e.target,this._getInputValues())}},{key:"close",value:function(){I(q(a.prototype),"close",this).call(this),this._form.reset()}},{key:"_getInputValues",value:function(){var e=this._form.querySelectorAll(".popup__text"),t={};return e.forEach((function(e){t[e.id]=e.value,e.value=""})),t}},{key:"setDefaultValues",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this._getInputValues();for(var n in e)if(Object.keys(t).includes(n)){var r=this._form.querySelector("#"+n);r.value=e[n]}}},{key:"loaderStart",value:function(){this._submitButton.innerText="Сохранение..."}},{key:"loaderStop",value:function(){this._submitButton.innerText="Сохранить"}}],n&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){var n=t.nameSelector,r=t.dataSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=n,this._dataSelector=r,this._avatarSelector=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{title:this._nameSelector.innerText,subtitle:this._dataSelector.innerText,avatar:this._avatarSelector.src}}},{key:"setAvatar",value:function(e){this._avatarSelector.style.backgroundImage="url('".concat(e,"')")}},{key:"setUserInfo",value:function(e,t){this._nameSelector.innerText=e,this._dataSelector.innerText=t}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var V=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),A(this,"baseUrl",""),A(this,"headers",null),A(this,"token","16d5d399-f287-4ea5-b24b-9feae8ea6a1a"),this.baseUrl=t.baseUrl,this.headers=t.headers,this.headers.authorization=this.token}var t,n;return t=e,(n=[{key:"_getResult",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch(this.baseUrl+"/cards",{headers:this.headers}).then(this._getResult)}},{key:"getUserInfo",value:function(){return fetch(this.baseUrl+"/users/me",{headers:this.headers}).then(this._getResult)}},{key:"setUserInfo",value:function(e,t){return fetch(this.baseUrl+"/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._getResult)}},{key:"postCard",value:function(e,t){return fetch(this.baseUrl+"/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then(this._getResult)}},{key:"deleteCard",value:function(e){var t="/cards/".concat(e);return fetch(this.baseUrl+t,{method:"DELETE",headers:this.headers}).then(this._getResult)}},{key:"likeCard",value:function(e){var t="/cards/".concat(e,"/likes");return fetch(this.baseUrl+t,{method:"PUT",headers:this.headers}).then(this._getResult)}},{key:"UnlikeCard",value:function(e){var t="/cards/".concat(e,"/likes");return fetch(this.baseUrl+t,{method:"DELETE",headers:this.headers}).then(this._getResult)}},{key:"setAvatar",value:function(e){return fetch(this.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._getResult)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N=document.querySelector(".profile__edit-btn"),M=document.querySelector(".profile__add-btn"),J=document.querySelector(".profile__title"),F=document.querySelector(".profile__subtitle"),H=document.querySelector(".profile__avatar"),z=new U({nameSelector:J,dataSelector:F,avatarSelector:H}),G=new w(".popup_confirm-removal",null),K=new V({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-43",headers:{"Content-Type":"application/json"}}),Q="",W=new i({items:[],renderer:function(e){W.addItem(ne(e))}});K.getUserInfo().then((function(e){z.setUserInfo(e.name,e.about),z.setAvatar(e.avatar),document.querySelector(".profile__id").innerText=e._id,Q=e._id,K.getInitialCards().then((function(e){(W=new i({items:e,renderer:function(e){W.addItem(ne(e))}},".elements-list")).renderItems()}))})).catch((function(e){console.log(e)}));var X={formInput:".popup__text",buttonElement:".popup__save-btn",saveBtnInactive:"popup__save-btn_inactive",textTypeError:"popup__text_type_error",inputErrorActive:"popup__input-error_active"},Y=null;new L(X,document.querySelector(".popup_edit").querySelector(".popup__container")).enableValidation(),(Y=new L(X,document.querySelector(".popup_add-newcard").querySelector(".popup__container"))).enableValidation();var Z=new x(".popup_edit",(function(e){Z.loaderStart(),K.setUserInfo(e["text-input"],e["job-input"]).then((function(e){Z.loaderStop(),z.setUserInfo(e.name,e.about),Z.close()})).catch((function(e){console.log(e)}))})),$=new x(".popup_update-avatar",(function(e){$.loaderStart(),K.setAvatar(e["link-inp"]).then((function(e){$.loaderStop(),$.close(),H.style.backgroundImage="url('".concat(e.avatar,"')")})).catch((function(e){console.log(e)}))})),ee=new x(".popup_add-newcard",(function(e){K.postCard(e["place-input"],e["link-input"]).then((function(e){console.log(e),W.addItem(ne(e))})).catch((function(e){console.log(e)})),ee.close(),Y.toggleButtonStateReopen()})),te=new _(".popup_image"),ne=function(e){var t=!0;e.owner&&(t=e.owner._id===Q);var n=!1;return e.likes.filter((function(e){return e._id==Q})).length>0&&(n=!0),new r(e,".template",te.open.bind(te),(function(){var t=this;G.open(),G.setSubmitFunction((function(){K.deleteCard(e._id).then((function(e){t.remove()})).catch((function(e){console.log(e)}))}))}),(function(){var e=this;this.haveMyLike()?K.UnlikeCard(this.id).then((function(t){e.unsetLike()})).catch((function(e){console.log(e)})):K.likeCard(this.id).then((function(t){e.setLike(t.likes)})).catch((function(e){console.log(e)}))}),t,n).generateCard()};N.addEventListener("click",(function(){var e=z.getUserInfo(),t=e.title,n=e.subtitle;Z.setDefaultValues({"text-input":t,"job-input":n}),Z.open()})),M.addEventListener("click",(function(){ee.open()})),H.addEventListener("click",(function(){$.open()})),Z.setEventListeners(),ee.setEventListeners(),te.setEventListeners(),$.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,